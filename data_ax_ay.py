fv_vec = [ [0.46566081243506208, 2.37791969112395, 2.3270779260938257],
           [0.80808909773873516, 3.6034524240269099, 3.2448774555226541],
           [1.4630441617465519, 5.2231459248496428, 5.8316143325700471],
           [1.2761356840643705, 6.7414265410522187, 6.1352608413655618],
           [1.0145368015946379, 3.9553514057998926, 4.3436345494382804],
           [0.72911322645694554, 3.6567214499368248, 3.6684325921378655],
           [0.70259842781052628, 3.0299461295404138, 3.1497262331426907],
           [0.89173494935612252, 5.3149289033613112, 5.1126349462218581],
           [0.79308818774396861, 4.4590186059226085, 4.1034113380532009],
           [1.1400712126190529, 5.0983277318925682, 5.5203012237183255],
           [0.87132668668096458, 3.9723631700826001, 4.8989807097615214],
           [0.52566008059687119, 1.6669230699423352, 2.447112879633544],
           [0.64303647855824086, 1.9413695523593135, 2.0840001070467093],
           [0.574184999892141, 1.7859831918662095, 2.1350056375946131],
           [1.8178657485037673, 4.8379145320109398, 8.1882602404825704],
           [1.5106018439212567, 4.6400647286956556, 4.8395638356652899],
           [0.81925703327759669, 2.0104122471296524, 2.1410568269883434],
           [1.1333319830190935, 3.4198860719059794, 3.0116700228722966],
           [0.81772498788764636, 3.8651758363181883, 3.7701350794378388],
           [2.7312761763840983, 4.9034973232124894, 5.7791004806747628],
           [0.82248844608241656, 1.9649940817558329, 2.7807389570286372],
           [2.2304563373945867, 7.7386626142371071, 10.466302092577942] ]


fv = [ 1.24422745618, 1.86616087328, 3.3897160778 , 2.95053660155,2.39935714734,
       1.50767203063, 1.43958884964, 1.92763421851, 1.69724780778,2.00314619994,
       1.87531241752, 1.07775497461, 0.97738046755, 0.61145308071,1.45264398233,
       1.83063392379, 0.91610415417, 1.58076082057, 1.3181420129, 1.50731721315,
       1.20402188444, 4.5458658864 ]


db = [ [0.016131047858542212, 0.082373984060854485, 0.08061276447137472],
       [0.018857066839026219, 0.084087934611754553, 0.075720451166169697],
       [0.01894924994259016, 0.067649836009354064, 0.075530678051947991],
       [0.018891002031105549, 0.099795267909099913, 0.09082202344382756],
       [0.01842525333038025, 0.071834113408196995, 0.078885819442131688],
       [0.021090510245662376, 0.10577523271686265, 0.10611399212434137],
       [0.021599340696397816, 0.093146861924553279, 0.096829152069177832],
       [0.020439850565625278, 0.12182583247417715, 0.11718896334928192],
       [0.020925217563910324, 0.11764887674834026, 0.10826636473710689],
       [0.024787383866475509, 0.11084764282154155, 0.12002217403291521],
       [0.020902062636519107, 0.095292139062498005, 0.11752056170870773],
       [0.022280531397148029, 0.070653894346151033, 0.10372287597934259],
       [0.029809073252189889, 0.089995558767679548, 0.096607445953628635],
       [0.042743538380869035, 0.13295234310102219, 0.15893430763785127],
       [0.055855192758263082, 0.14864829757416664, 0.25159000573249851],
       [0.037250184216297708, 0.11442013434247364, 0.11933961627976243],
       [0.041929323875454429, 0.10289228265253936, 0.1095786322094697],
       [0.0336358467502023, 0.10149785371039237, 0.089382522393532587],
       [0.028667636773812517, 0.1355045505319831, 0.13217263095350443],
       [0.083270886886628231, 0.14949735749193965, 0.17619266282687762],
       [0.031665016032814311, 0.075650386822514515, 0.10705578184931727],
       [0.022849539971544916, 0.079277445501067981, 0.1072202956897946] ]

def fitlin( b1, v1, sigma ) :

	def linfunc( b1, m1, c1 ) :

		return m1 * b1 + c1

	sigma = np.ones(len(b1))
	sigma[ -1]= 1.E-5
	popt1, pcov1 = curve_fit( linfunc, b1, v1, sigma=sigma )
	m1, c1 = popt1

	fitfunc = lambda b1: m1 * b1 + c1

	return { "slope"   : m1,
	         "offset"  : c1,
	         "fitfunc" : fitfunc,
	         "rawres"  : ( popt1,pcov1 ) }


v_x = [ fv_vec[i][0] for i in range( shape( fv_vec )[0] ) ]

v_y = [ fv_vec[i][1] for i in range( shape( fv_vec )[0] ) ]

v_z = [ fv_vec[i][2] for i in range( shape( fv_vec )[0] ) ]

b_x = [ db[i][0] for i in range( shape( fv_vec )[0] ) ]

b_y = [ db[i][1] for i in range( shape( fv_vec )[0] ) ]

b_z = [ db[i][2] for i in range( shape( fv_vec )[0] ) ]

v = sqrt( [ ( v_x[i]**2 + v_y[i]**2 + v_z[i]**2 ) for i in range( len( v_x ) ) ] )
b = sqrt( [ ( b_x[i]**2 + b_y[i]**2 + b_z[i]**2 ) for i in range( len( v_x ) ) ] )

v_x.append( 0 )
v_y.append( 0 )
v_z.append( 0 )
b_x.append( 0 )
b_y.append( 0 )
b_z.append( 0 )

sigx = [1]*len( b_x )
sigy = [1]*len( b_y )
sigz = [1]*len( b_z )

dat_fit_x = fitlin( b_x, v_x, sigx )
dat_fit_y = fitlin( b_y, v_y, sigy )
dat_fit_z = fitlin( b_z, v_z, sigz )

m_x = dat_fit_x['slope']
m_y = dat_fit_y['slope']
m_z = dat_fit_z['slope']

c_x = dat_fit_x['offset']
c_y = dat_fit_y['offset']
c_z = dat_fit_z['offset']

indx = linspace( 0., max( b_x ), len( b_x ) )
indy = linspace( 0., max( b_y ), len( b_y ) )
indz = linspace( 0., max( b_z ), len( b_z ) )

fit_x = dat_fit_x['fitfunc'](indx)
fit_y = dat_fit_y['fitfunc'](indy)
fit_z = dat_fit_z['fitfunc'](indz)

y_x = [ m_x*ind for ind in indx ]
y_y = [ m_y*ind for ind in indy ]
y_z = [ m_z*ind for ind in indz ]

x_fit_dat = [ ( m_x*indx[i] + c_x ) for i in range( len( b_x ) ) ]
y_fit_dat = [ ( m_y*indy[i] + c_y ) for i in range( len( b_x ) ) ]
z_fit_dat = [ ( m_z*indz[i] + c_z ) for i in range( len( b_x ) ) ]

plt.figure()

plt.scatter( b_x, v_x, marker='^', color='r' )
plt.plot( indx, y_x, marker='*', color='m' )
plt.xlabel( r'$\sigma_{bx}$' )
plt.ylabel( r'$\delta V_x$' )

plt.figure()

plt.scatter( b_y, v_y, marker='^', color='r' )
plt.plot( indy, y_y, marker='*', color='m' )
plt.xlabel( r'$\sigma_{by}$' )
plt.ylabel( r'$\delta V_y$' )

plt.figure()

plt.scatter( b_z, v_z, marker='^', color='r' )
plt.plot( indz, y_z, marker='*', color='m' )
plt.xlabel( r'$\sigma_{bz}$' )
plt.ylabel( r'$\delta V_z$' )

plt.show( )
